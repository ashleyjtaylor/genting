{"ast":null,"code":"var _jsxFileName = \"/Users/ashleytaylor/Documents/genting/pages/planets/[stub].jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\n\nconst Planet = props => {\n  console.log('props', props);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"Planet\");\n};\n\nPlanet.getInitialProps = async ({\n  res,\n  query\n}) => {\n  console.log('res', res);\n  console.log('query', query);\n\n  try {\n    const data = await fetch(`http://localhost:3000/planets/${query.stub}`);\n    if (!data) return {\n      statusCode: 404\n    };\n    return {\n      data,\n      statusCode: 200\n    };\n  } catch (err) {\n    return {\n      err,\n      statusCode: 500,\n      message: 'Server error'\n    };\n  }\n};\n\nexport default Planet;","map":{"version":3,"sources":["/Users/ashleytaylor/Documents/genting/pages/planets/[stub].jsx"],"names":["React","Planet","props","console","log","getInitialProps","res","query","data","fetch","stub","statusCode","err","message"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAGD,CAND;;AAQAD,MAAM,CAACI,eAAP,GAAyB,OAAO;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAP,KAA0B;AACjDJ,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBE,GAAnB;AACAH,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBG,KAArB;;AAEA,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAAE,iCAAgCF,KAAK,CAACG,IAAK,EAA7C,CAAxB;AAEA,QAAI,CAACF,IAAL,EAAW,OAAO;AAAEG,MAAAA,UAAU,EAAE;AAAd,KAAP;AAEX,WAAO;AAAEH,MAAAA,IAAF;AAAQG,MAAAA,UAAU,EAAE;AAApB,KAAP;AACD,GAND,CAME,OAAOC,GAAP,EAAY;AACZ,WAAO;AACLA,MAAAA,GADK;AAELD,MAAAA,UAAU,EAAE,GAFP;AAGLE,MAAAA,OAAO,EAAE;AAHJ,KAAP;AAKD;AACF,CAjBD;;AAmBA,eAAeZ,MAAf","sourcesContent":["import React from 'react';\n\nconst Planet = (props) => {\n  console.log('props', props);\n  \n  return (\n    <div>Planet</div>\n  );\n}\n\nPlanet.getInitialProps = async ({ res, query }) => {\n  console.log('res', res);\n  console.log('query', query);\n\n  try {\n    const data = await fetch(`http://localhost:3000/planets/${query.stub}`);\n\n    if (!data) return { statusCode: 404 };\n\n    return { data, statusCode: 200 };\n  } catch (err) {\n    return {\n      err,\n      statusCode: 500,\n      message: 'Server error'\n    }\n  }\n};\n\nexport default Planet;\n"]},"metadata":{},"sourceType":"module"}