{"ast":null,"code":"import fetch from 'isomorphic-unfetch';\nimport { formatStub } from '../../../lib/responseFormat';\nconst stubs = [{\n  id: 1,\n  planet: 'tatooine'\n}, {\n  id: 2,\n  planet: 'alderaan'\n}, {\n  id: 3,\n  planet: 'yavin'\n}];\nexport default (async (req, res) => {\n  const stub = stubs.find(stub => stub.planet === req.query.stub);\n\n  if (!stub) {\n    return res.status(404).json({\n      message: 'Invalid planet'\n    });\n  }\n\n  try {\n    const response = await fetch(`https://swapi.co/api/planets/${stub.id}`);\n    const data = await response.json();\n    return res.status(200).json(formatStub(data));\n  } catch (err) {\n    console.log('Error: /planets/:stub', err);\n    return res.status(400).json({\n      message: 'Error fetching planets',\n      err\n    });\n  }\n});","map":{"version":3,"sources":["/Users/ashleytaylor/Documents/genting/pages/api/planets/[stub].js"],"names":["fetch","formatStub","stubs","id","planet","req","res","stub","find","query","status","json","message","response","data","err","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA,SAASC,UAAT,QAA2B,6BAA3B;AAEA,MAAMC,KAAK,GAAG,CACZ;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,MAAM,EAAE;AAAjB,CADY,EAEZ;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,MAAM,EAAE;AAAjB,CAFY,EAGZ;AAAED,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,MAAM,EAAE;AAAjB,CAHY,CAAd;AAMA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAMC,IAAI,GAAGL,KAAK,CAACM,IAAN,CAAWD,IAAI,IAAIA,IAAI,CAACH,MAAL,KAAgBC,GAAG,CAACI,KAAJ,CAAUF,IAA7C,CAAb;;AAEA,MAAI,CAACA,IAAL,EAAW;AACT,WAAOD,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB,CAAP;AACD;;AAED,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMb,KAAK,CAAE,gCAA+BO,IAAI,CAACJ,EAAG,EAAzC,CAA5B;AACA,UAAMW,IAAI,GAAG,MAAMD,QAAQ,CAACF,IAAT,EAAnB;AAEA,WAAOL,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBV,UAAU,CAACa,IAAD,CAA/B,CAAP;AACD,GALD,CAKE,OAAOC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,GAArC;AACA,WAAOT,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE,wBAAX;AAAqCG,MAAAA;AAArC,KAArB,CAAP;AACD;AACF,CAhBD","sourcesContent":["import fetch from 'isomorphic-unfetch';\n\nimport { formatStub } from '../../../lib/responseFormat';\n\nconst stubs = [\n  { id: 1, planet: 'tatooine' },\n  { id: 2, planet: 'alderaan' },\n  { id: 3, planet: 'yavin' }\n];\n\nexport default async (req, res) => {\n  const stub = stubs.find(stub => stub.planet === req.query.stub);\n\n  if (!stub) {\n    return res.status(404).json({ message: 'Invalid planet' });\n  }\n\n  try {\n    const response = await fetch(`https://swapi.co/api/planets/${stub.id}`);\n    const data = await response.json();\n\n    return res.status(200).json(formatStub(data));\n  } catch (err) {\n    console.log('Error: /planets/:stub', err);\n    return res.status(400).json({ message: 'Error fetching planets', err });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}