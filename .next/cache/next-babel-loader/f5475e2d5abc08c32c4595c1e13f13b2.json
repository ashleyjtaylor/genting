{"ast":null,"code":"import moment from 'moment';\nimport fetch from 'isomorphic-unfetch';\nimport { formatStub, formatFilm } from '../../../lib/responseFormat';\nconst stubs = [{\n  id: 1,\n  planet: 'tatooine'\n}, {\n  id: 2,\n  planet: 'alderaan'\n}, {\n  id: 3,\n  planet: 'yavin'\n}];\n\nconst fetchFilms = async films => {\n  const data = await Promise.all(films.map(async url => {\n    const response = await fetch(url);\n    const film = await response.json();\n    return formatFilm(film);\n  }));\n  return data.sort((a, b) => moment(b.ReleaseDate).diff(a.ReleaseDate, 'days'));\n};\n\nexport default (async (req, res) => {\n  const stub = stubs.find(stub => stub.planet === req.query.stub);\n\n  if (!stub) {\n    return res.status(404).json(null);\n  }\n\n  try {\n    const response = await fetch(`https://swapi.co/api/planets/${stub.id}`);\n    const data = await response.json();\n    data.films = await fetchFilms(data.films);\n    return res.status(200).json(formatStub(data));\n  } catch (err) {\n    console.log('Error: /planets/:stub', err);\n    return res.status(400).json({\n      message: 'Error fetching planets',\n      err\n    });\n  }\n});","map":null,"metadata":{},"sourceType":"module"}