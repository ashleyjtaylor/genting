{"ast":null,"code":"import _Object$entries from \"@babel/runtime-corejs2/core-js/object/entries\";\nvar _jsxFileName = \"/Users/ashleytaylor/Documents/genting/pages/planets/[stub].jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport fetch from 'isomorphic-unfetch';\n\nconst Planet = props => {\n  console.log('props', props);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Planet\");\n};\n\nPlanet.getInitialProps = async ({\n  res,\n  query\n}) => {\n  try {\n    const response = await fetch(\"http://localhost:3000/api/planets/\".concat(query.stub));\n    const data = await response.json();\n    if (!_Object$entries(data).length === 0) return {\n      statusCode: 404\n    };\n    return {\n      data,\n      statusCode: 200\n    };\n  } catch (err) {\n    return {\n      err,\n      statusCode: 500,\n      message: 'Server error'\n    };\n  }\n};\n\nexport default Planet;","map":{"version":3,"sources":["/Users/ashleytaylor/Documents/genting/pages/planets/[stub].jsx"],"names":["React","fetch","Planet","props","console","log","getInitialProps","res","query","response","stub","data","json","length","statusCode","err","message"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAGD,CAND;;AAQAD,MAAM,CAACI,eAAP,GAAyB,OAAO;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAP,KAA0B;AACjD,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMR,KAAK,6CAAsCO,KAAK,CAACE,IAA5C,EAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEA,QAAI,CAAC,gBAAeD,IAAf,EAAqBE,MAAtB,KAAiC,CAArC,EAAwC,OAAO;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAP;AAExC,WAAO;AAAEH,MAAAA,IAAF;AAAQG,MAAAA,UAAU,EAAE;AAApB,KAAP;AACD,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZ,WAAO;AACLA,MAAAA,GADK;AAELD,MAAAA,UAAU,EAAE,GAFP;AAGLE,MAAAA,OAAO,EAAE;AAHJ,KAAP;AAKD;AACF,CAfD;;AAiBA,eAAed,MAAf","sourcesContent":["import React from 'react';\nimport fetch from 'isomorphic-unfetch';\n\nconst Planet = (props) => {\n  console.log('props', props);\n  \n  return (\n    <div>Planet</div>\n  );\n}\n\nPlanet.getInitialProps = async ({ res, query }) => {\n  try {\n    const response = await fetch(`http://localhost:3000/api/planets/${query.stub}`);\n    const data = await response.json();\n\n    if (!Object.entries(data).length === 0) return { statusCode: 404 };\n\n    return { data, statusCode: 200 };\n  } catch (err) {\n    return {\n      err,\n      statusCode: 500,\n      message: 'Server error'\n    }\n  }\n};\n\nexport default Planet;\n"]},"metadata":{},"sourceType":"module"}