{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport fetch from 'isomorphic-unfetch';\n\nvar Planet = function Planet(props) {\n  console.log('props', props);\n  return __jsx(\"div\", null, \"Planet\");\n};\n\nPlanet.getInitialProps = function _callee(_ref) {\n  var res, query, response, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          res = _ref.res, query = _ref.query;\n          _context.prev = 1;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(\"http://localhost:3000/planets/\".concat(query.stub)));\n\n        case 4:\n          response = _context.sent;\n          _context.next = 7;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 7:\n          data = _context.sent;\n\n          if (data) {\n            _context.next = 10;\n            break;\n          }\n\n          return _context.abrupt(\"return\", {\n            statusCode: 404\n          });\n\n        case 10:\n          return _context.abrupt(\"return\", {\n            data: data,\n            statusCode: 200\n          });\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](1);\n          return _context.abrupt(\"return\", {\n            err: _context.t0,\n            statusCode: 500,\n            message: 'Server error'\n          });\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 13]], _Promise);\n};\n\nexport default Planet;","map":null,"metadata":{},"sourceType":"module"}